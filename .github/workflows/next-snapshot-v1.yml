jobs:
  build:
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_PRIVATE_PASSPHRASE }}
      GPG_PRIVATE_KEY: ${{ secrets.OSSRH_GPG_PRIVATE_KEY }}
      MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
      MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      SC_NEXT_VERSION: null
      SC_VERSION: null
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      id: generate-token
      uses: tibdex/github-app-token@v1
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.APP_PRIVATE_KEY }}
    - continue-on-error: true
      name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - continue-on-error: true
      name: Set up Java 8
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 8
        server-id: ossrh
        server-password: MAVEN_PASSWORD
        server-username: MAVEN_USERNAME
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      id: preRelease
      name: Run pre release script
      run: "# export GPG_TTY=$(tty)\nexport MY_POM_VERSION=`mvn -q -Dexec.executable=\"\
        echo\" -Dexec.args='${projects.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec`\n\
        if [[ $MY_POM_VERSION =~ ^.*SNAPSHOT$ ]];\nthen\n  echo \"not releasing snapshot\
        \ version: \" ${MY_POM_VERSION}\n  echo \"RELEASE_OK=no\" >> $GITHUB_ENV\n\
        else\n  . ./CI/pre-release-v1.sh\n  echo \"RELEASE_OK=yes\" >> $GITHUB_ENV\n\
        fi\necho \"SC_VERSION=$SC_VERSION\" >> $GITHUB_ENV\necho \"SC_NEXT_VERSION=$SC_NEXT_VERSION\"\
        \ >> $GITHUB_ENV\necho \"SC_LAST_RELEASE=$SC_LAST_RELEASE\" >> $GITHUB_ENV\n"
    - continue-on-error: true
      name: configure git user email
      run: 'git config --global user.email "action@github.com"

        git config --global user.name "GitHub Action"

        git config --global hub.protocol https

        git remote set-url origin https://\${{ secrets.GITHUB_TOKEN }}:x-oauth-basic@github.com/swagger-api/swagger-parser.git

        '
    - continue-on-error: true
      name: Checkout v1
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: v1
    - continue-on-error: true
      id: postRelease
      if: env.RELEASE_OK == 'yes'
      name: Run next snapshot script
      run: '. ./CI/post-nextsnap-v1.sh

        '
    - continue-on-error: true
      if: env.RELEASE_OK == 'yes'
      name: Create Next Snapshot Pull Request
      uses: peter-evans/create-pull-request@v4
      with:
        branch: bump-snap-${{ env.SC_NEXT_VERSION }}-SNAPSHOT
        commit-message: bump snapshot ${{ env.SC_NEXT_VERSION }}-SNAPSHOT
        title: bump snapshot ${{ env.SC_NEXT_VERSION }}-SNAPSHOT
        token: ${{ steps.generate-token.outputs.token }}
name: Next Snapshot V1
on:
  repository_dispatch:
    types: trigger-ga___next-snapshot-v1.yml
